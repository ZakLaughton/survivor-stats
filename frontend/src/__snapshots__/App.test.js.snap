// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavBar
          allSeasons={Array []}
          atEarliestEpisode={[Function]}
          atLatestEpisode={[Function]}
          decrementEpisode={[Function]}
          episodeId=""
          incrementEpisode={[Function]}
          seasonData={Object {}}
          seasonNum={null}
          setEpisode={[Function]}
          setSeason={[Function]}
        />,
        <Route
          exact={true}
          path="/"
          render={[Function]}
        />,
      ],
      "className": "App",
      "onKeyDown": [Function],
      "tabIndex": "0",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "allSeasons": Array [],
          "atEarliestEpisode": [Function],
          "atLatestEpisode": [Function],
          "decrementEpisode": [Function],
          "episodeId": "",
          "incrementEpisode": [Function],
          "seasonData": Object {},
          "seasonNum": null,
          "setEpisode": [Function],
          "setSeason": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavBar
            allSeasons={Array []}
            atEarliestEpisode={[Function]}
            atLatestEpisode={[Function]}
            decrementEpisode={[Function]}
            episodeId=""
            incrementEpisode={[Function]}
            seasonData={Object {}}
            seasonNum={null}
            setEpisode={[Function]}
            setSeason={[Function]}
          />,
          <Route
            exact={true}
            path="/"
            render={[Function]}
          />,
        ],
        "className": "App",
        "onKeyDown": [Function],
        "tabIndex": "0",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "allSeasons": Array [],
            "atEarliestEpisode": [Function],
            "atLatestEpisode": [Function],
            "decrementEpisode": [Function],
            "episodeId": "",
            "incrementEpisode": [Function],
            "seasonData": Object {},
            "seasonNum": null,
            "setEpisode": [Function],
            "setSeason": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
